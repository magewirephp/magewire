<?php declare(strict_types=1);
/**
 * Copyright Â© Willem Poortman 2021-present. All rights reserved.
 *
 * Please read the README and LICENSE files for more
 * details on copyrights and license information.
 */

/** @var Magewire $magewireScripts */
/** @var Escaper $escaper */
/** @var Template $block */

use Magento\Framework\Escaper;
use Magento\Framework\View\Element\Template;
use Magewirephp\Magewire\ViewModel\Magewire;
?>
<script>
    Magewire.directive('select', (element, directive, component) => {
        if (element.tagName !== 'SELECT') {
            console.error('Magewire: [wire:select] can only be applied on elements of type select.', element)
            return
        }
        if (directive.value) {
            console.error('Magewire: [wire:select] shouldn\'t have a value.', element)
            return
        }
        if (! element.hasAttribute('wire:model.defer')) {
            console.error('Magewire: [wire:model] requires a defer modifier for [wire:select] to function properly.', element)
            return
        }

        let changed = false,
            timeout = null

        const sync = () => {
            clearTimeout(timeout)

            if (changed) {
                changed = false

                component.fireMessage()
            }
        }

        const debounce = () => {
            if (directive.modifiers.includes('debounce')) {
                clearTimeout(timeout)

                timeout = setTimeout(() => sync(), directive.durationOr(1500))
            }
        }

        const change = () => {
            changed = true

            debounce()
        }

        element.addEventListener('keydown', debounce)
        element.addEventListener('change', change)

        if (directive.modifiers.includes('blur')) {
            element.addEventListener('blur', () => sync())
        }
    })
</script>
