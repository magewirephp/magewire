<script>
    function magewireLoaderNotifications(config = {}) {
        config = Object.assign({}, config);

        return {
            messages: [],
            awaiting: [],

            config: Object.assign({
                messageHideTimeout: 2500
            }, config),

            <?php /* Create a new message an detirmine if it needs to be shown or should wait. */ ?>
            messageCreate(item) {
                item.loader.map(i => i.split('::')).forEach((value, index) => {
                    let message = Object.assign({}, item);
                    message.loader = value;

                    if (index === 0) {
                        this.messages.push(message);
                    } else {
                        this.awaiting.push(message);
                    }
                });
            },

            <?php /* Deactivate message, but not remove it fully from the array to let animations run. */ ?>
            messageDeactivate(index, failure) {
                message = this.messages[index] || false;

                if (message === false) {
                    return console.log('Magewire: Could not deactivate notification message.');
                }

                message.loading = false;

                setTimeout(() => {
                    message.active = false;
                }, failure ? this.config.messageHideTimeout + 1000 : this.config.messageHideTimeout);
            },

            init() {
                document.addEventListener('magewire:loader:start', (event) => {
                    if (event.detail.loader === false) {
                        return;
                    }

                    this.messageCreate(Object.assign({
                        active: true,
                        loading: true,
                    }, event.detail));
                })

                document.addEventListener('magewire:loader:stop', (event) => {
                    if (! event.detail.component && ! event.detail.component.id && event.detail.loader) return;

                    for (let message in this.messages) {
                        if(this.messages[message].key == event.detail.loader.key) {
                            return this.messageDeactivate(message);
                        }
                    }
                })
            },

            notifications() {
                return {}
            },

            messenger() {
                return {}
            }
        }
    }
</script>
