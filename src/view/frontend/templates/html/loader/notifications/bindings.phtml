<script>
    function magewireLoaderNotifications(config = {}) {
        return {
            messages: [],
            awaiting: [], // wip

            config: Object.assign({
                messageHideTimeout: 2500
            }, config),

            init() {
                <?php /* @see Magewirephp_Magewire::page/js/magewire/plugin/loader.phtml */ ?>
                document.addEventListener('magewire:loader:start', (event) => {
                    if (event.detail.loader === false) {
                        return;
                    }

                    this.messageCreate(event.detail);
                })

                <?php /* @see Magewirephp_Magewire::page/js/magewire/plugin/loader.phtml */ ?>
                document.addEventListener('magewire:loader:stop', (event) => {
                    if (! event.detail.component && ! event.detail.component.id && event.detail.loader) return;

                    <?php /* Find the component by its unique key to try and deactivate it. */ ?>
                    for (let message in this.messages) {
                        if (event.detail.loader && this.messages[message].key == event.detail.loader.key) {
                            return this.messageDeactivate(message, event.failure || false);
                        }
                    }
                })
            },

            <?php /* Create a new message an detirmine if it needs to be shown or should wait. */ ?>
            messageCreate(item) {
                if (item.loader && typeof item.loader !== 'object') {
                    return console.log(
                        'Magewire: Something went wrong while creating a notification message.'
                    );
                }

                item.loader.map(i => i.split('::')).forEach((value, index) => {
                    let message = Object.assign({}, item, {
                        <?php /* Can only be of type Boolean. */ ?>
                        active : false,
                        <?php /* Can be of value Array or Boolean. */ ?>
                        loader : value,
                        <?php /* Can only be of type Boolean. */ ?>
                        loading: false,
                        <?php /* Can be of value null, true or false. */ ?>
                        success: null
                    });

                    if (index === 0) {
                        message.active  = true;
                        message.loading = true;

                        this.messages.push(message);
                    } else {
                        this.awaiting.push(message);
                    }
                });
            },

            <?php /* Deactivate message, but not remove it fully from the array to let animations run. */ ?>
            messageDeactivate(index, failure = false) {
                message = this.messages[index] || false;

                if (message === false) {
                    return console.log(
                        'Magewire: Could not deactivate the notification message.'
                    );
                }

                let timeout = this.config.messageHideTimeout;

                message.loading = false;
                message.success = ! failure;

                if (failure) {
                    timeout + 5000;
                }

                setTimeout(() => message.active = false, timeout);
            },

            messageList() {
                return this.messages.filter(message => message.loader.length)
            },

            notifications() {
                return {}
            },

            messenger() {
                return {}
            }
        }
    }
</script>
